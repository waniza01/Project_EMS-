/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.ems;

import java.awt.image.BufferedImage;
import java.io.File;
import java.util.*;
import javax.imageio.ImageIO;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author dell
 */
public class FoodManagementForm extends javax.swing.JPanel {

    private EMS ems;
    private String imagePath;
    DefaultTableModel model;

    public FoodManagementForm(EMS ems) {
        this.setName("food");
        this.ems = ems;
        initComponents();
        model = (DefaultTableModel) fdTable.getModel();
        fdTable.removeColumn(fdTable.getColumnModel().getColumn(3));
        load();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        fdName = new javax.swing.JTextField();
        fdCost = new javax.swing.JTextField();
        fdID = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        fdTable = new javax.swing.JTable();
        btnClear = new javax.swing.JButton();
        imageLabel = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        setMinimumSize(new java.awt.Dimension(855, 692));
        setName("food"); // NOI18N
        setPreferredSize(new java.awt.Dimension(860, 690));
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setBackground(new java.awt.Color(255, 255, 204));
        jLabel1.setFont(new java.awt.Font("Times New Roman", 3, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Food Management");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(298, 35, -1, -1));

        jLabel2.setBackground(new java.awt.Color(255, 255, 204));
        jLabel2.setFont(new java.awt.Font("Cambria Math", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Food Item ID");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(44, 122, -1, -1));

        jLabel3.setBackground(new java.awt.Color(255, 255, 204));
        jLabel3.setFont(new java.awt.Font("Cambria Math", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Food Item Name");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(44, 169, -1, -1));

        jLabel4.setBackground(new java.awt.Color(255, 255, 204));
        jLabel4.setFont(new java.awt.Font("Cambria Math", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Food Item Image");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 90, -1, 20));

        jLabel5.setBackground(new java.awt.Color(255, 255, 204));
        jLabel5.setFont(new java.awt.Font("Cambria Math", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Food Item Cost");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(44, 221, -1, -1));

        fdName.setBackground(new java.awt.Color(255, 255, 204));
        fdName.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        add(fdName, new org.netbeans.lib.awtextra.AbsoluteConstraints(298, 166, 154, -1));

        fdCost.setBackground(new java.awt.Color(255, 255, 204));
        fdCost.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        add(fdCost, new org.netbeans.lib.awtextra.AbsoluteConstraints(298, 218, 154, -1));

        fdID.setBackground(new java.awt.Color(255, 255, 204));
        fdID.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        fdID.setEnabled(false);
        add(fdID, new org.netbeans.lib.awtextra.AbsoluteConstraints(298, 119, 154, -1));

        jButton1.setFont(new java.awt.Font("Cambria Math", 3, 18)); // NOI18N
        jButton1.setText("Choose Image");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 240, -1, -1));

        btnUpdate.setFont(new java.awt.Font("Cambria Math", 3, 18)); // NOI18N
        btnUpdate.setText("UPDATE");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        add(btnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 350, -1, 41));

        btnDelete.setFont(new java.awt.Font("Cambria Math", 3, 18)); // NOI18N
        btnDelete.setText("DELETE");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        add(btnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 350, 108, 41));

        btnAdd.setFont(new java.awt.Font("Cambria Math", 3, 18)); // NOI18N
        btnAdd.setText("ADD");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        add(btnAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 350, 107, 41));
        btnAdd.getAccessibleContext().setAccessibleName("CLEAR");

        fdTable.setBackground(new java.awt.Color(255, 255, 204));
        fdTable.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        fdTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Food_Item_ID", "Food_Item_Name", "Food_Item_Cost", "Food_Item_Image"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.Double.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        fdTable.setGridColor(new java.awt.Color(255, 255, 204));
        fdTable.getTableHeader().setReorderingAllowed(false);
        fdTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fdTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(fdTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 410, 800, 250));

        btnClear.setFont(new java.awt.Font("Cambria Math", 3, 18)); // NOI18N
        btnClear.setText("CLEAR");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });
        add(btnClear, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 350, 107, 41));

        imageLabel.setBackground(new java.awt.Color(255, 255, 255));
        imageLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        imageLabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        add(imageLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 120, 150, 110));

        jLabel6.setBackground(new java.awt.Color(255, 255, 204));
        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ems/bg15.png"))); // NOI18N
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 840, 670));

        getAccessibleContext().setAccessibleName("");
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        if (checkValidation() && fdID.getText().trim().isEmpty()) {
            String foodName = fdName.getText();
            double foodCost = Double.parseDouble(fdCost.getText());
            FoodManagement fooditem = new FoodManagement(foodName, foodCost, imagePath);
            boolean check = FoodManagementDao.ADD(fooditem);
            reSetField();
            if (check) {
                JOptionPane.showMessageDialog(FoodManagementForm.this, "Food Item added successfully..");
                load();
            } else {
                JOptionPane.showMessageDialog(FoodManagementForm.this, "Item Already Exist..");
            }
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        int i = fdTable.getSelectedRow();
        if (i == -1) {
            JOptionPane.showMessageDialog(FoodManagementForm.this, "Select any Row");
        } else {
            int id = Integer.parseInt(model.getValueAt(i, 0).toString());
            FoodManagementDao.deleteRow(id);
            load();
            reSetField();
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void fdTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fdTableMouseClicked
        // TODO add your handling code here:
        //reSetField();
        int i = fdTable.getSelectedRow();
        if (i != -1) {
            fdID.setText(model.getValueAt(i, 0).toString());
            fdName.setText(model.getValueAt(i, 1).toString());
            fdCost.setText(model.getValueAt(i, 2).toString());

            imagePath = model.getValueAt(i, 3).toString();
            loadImage(imagePath);

        } else {
            JOptionPane.showMessageDialog(FoodManagementForm.this, "Select any Row");
        }
    }//GEN-LAST:event_fdTableMouseClicked

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        // TODO add your handling code here:
        fdTable.clearSelection();
    }//GEN-LAST:event_formMouseClicked

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        int i = fdTable.getSelectedRow();
        if (i != 1 && checkValidation() && !(fdID.getText().trim().isEmpty())) {
            int id = Integer.parseInt(fdID.getText());
            String name = fdName.getText();
            double cost = Double.parseDouble(fdCost.getText());
            String url = imagePath;
            FoodManagementDao.update(id, name, cost, url);
            load();
            reSetField();
        } else {
            JOptionPane.showMessageDialog(FoodManagementForm.this, "Select Row to update");
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // TODO add your handling code here:
        reSetField();
    }//GEN-LAST:event_btnClearActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        //fileChooser.setCurrentDirectory(new File(System.getProperty("user.home")));
        fileChooser.setCurrentDirectory(new File("."));
        int result = fileChooser.showOpenDialog(this.ems);
        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            System.out.println("Selected file: " + selectedFile.getAbsolutePath());
            imagePath = selectedFile.getAbsolutePath();
            loadImage(selectedFile.getAbsolutePath());
        }


    }//GEN-LAST:event_jButton1ActionPerformed

    private void loadImage(String path) {

        if (path != null && !path.trim().equalsIgnoreCase("null") && path.trim().length() > 0) {
            try {
                BufferedImage myPicture = ImageIO.read(new File(path));
                imageLabel.setIcon(new ImageIcon(myPicture));
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }

    private void load() {
        List<FoodManagement> list = FoodManagementDao.getAll();
        model.setRowCount(0);
        for (int i = 0; i < list.size(); i++) {
            FoodManagement item = list.get(i);
            int id = item.getFoodId();
            String name = item.getFoodName();
            double cost = item.getFoodCost();
            String url = item.getFoodImage();
            addRow(id, name, cost, url);

        }

    }

    private void addRow(int id, String name, double cost, String url) {
        model.insertRow(fdTable.getRowCount(), new Object[]{id, name, cost, url});
    }

    private boolean checkValidation() {
        if (fdName.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(FoodManagementForm.this, "Enter Name");
            fdName.grabFocus();
            return false;
        } else if (fdCost.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(FoodManagementForm.this, "Enter Cost");
            fdCost.grabFocus();
            return false;
        }
        return true;
    }

    private void reSetField() {
        fdID.setText(null);
        fdName.setText(null);
        fdCost.setText(null);
        imageLabel.setIcon(null);
        imagePath = null;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JTextField fdCost;
    private javax.swing.JTextField fdID;
    private javax.swing.JTextField fdName;
    private javax.swing.JTable fdTable;
    private javax.swing.JLabel imageLabel;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
