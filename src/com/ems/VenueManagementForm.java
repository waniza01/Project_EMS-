package com.ems;

import java.awt.image.BufferedImage;
import java.io.File;
import java.util.List;
import javax.imageio.ImageIO;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author dell
 */
public class VenueManagementForm extends javax.swing.JPanel {

    private EMS ems;
    private String imagePath;
    DefaultTableModel model;
    
    public VenueManagementForm(EMS ems) {
        
        this.ems = ems;
        initComponents();
        model = (DefaultTableModel) vmTable.getModel();
        vmTable.removeColumn(vmTable.getColumnModel().getColumn(5));
        load();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        vID = new javax.swing.JTextField();
        vPlace = new javax.swing.JTextField();
        vCost = new javax.swing.JTextField();
        vContNo = new javax.swing.JTextField();
        vName = new javax.swing.JTextField();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        chooseImage = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        vmTable = new javax.swing.JTable();
        imageLabel = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();

        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        setMinimumSize(new java.awt.Dimension(870, 681));
        setPreferredSize(new java.awt.Dimension(876, 684));
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Times New Roman", 3, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Venue Management");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(244, 27, -1, -1));

        jLabel2.setFont(new java.awt.Font("Cambria Math", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Venue Name");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(41, 154, -1, -1));

        jLabel3.setFont(new java.awt.Font("Cambria Math", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Venue ID");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(42, 106, -1, -1));

        jLabel4.setFont(new java.awt.Font("Cambria Math", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Venue Cost");
        jLabel4.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 250, -1, -1));

        jLabel5.setFont(new java.awt.Font("Cambria Math", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Venue Place");
        jLabel5.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(41, 205, -1, -1));

        jLabel6.setFont(new java.awt.Font("Cambria Math", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Venue Image");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(405, 154, -1, -1));

        jLabel7.setFont(new java.awt.Font("Cambria Math", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Venue ContactNo");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(405, 105, -1, -1));

        vID.setBackground(new java.awt.Color(255, 255, 204));
        vID.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        vID.setEnabled(false);
        add(vID, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 100, 144, -1));

        vPlace.setBackground(new java.awt.Color(255, 255, 204));
        vPlace.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        add(vPlace, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 200, 144, -1));

        vCost.setBackground(new java.awt.Color(255, 255, 204));
        vCost.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        add(vCost, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 250, 144, -1));

        vContNo.setBackground(new java.awt.Color(255, 255, 204));
        vContNo.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        add(vContNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 100, 170, -1));

        vName.setBackground(new java.awt.Color(255, 255, 204));
        vName.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        add(vName, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 150, 144, -1));

        btnUpdate.setFont(new java.awt.Font("Cambria Math", 3, 18)); // NOI18N
        btnUpdate.setText("UPDATE");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        add(btnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(164, 335, 104, 39));

        btnDelete.setFont(new java.awt.Font("Cambria Math", 3, 18)); // NOI18N
        btnDelete.setText("DELETE");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        add(btnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(286, 335, -1, 39));

        btnClear.setFont(new java.awt.Font("Cambria Math", 3, 18)); // NOI18N
        btnClear.setText("CLEAR");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });
        add(btnClear, new org.netbeans.lib.awtextra.AbsoluteConstraints(405, 335, 105, 39));

        chooseImage.setFont(new java.awt.Font("Cambria Math", 3, 18)); // NOI18N
        chooseImage.setText("Choose Image");
        chooseImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseImageActionPerformed(evt);
            }
        });
        add(chooseImage, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 280, 170, 39));

        btnAdd.setFont(new java.awt.Font("Cambria Math", 3, 18)); // NOI18N
        btnAdd.setText("ADD");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        add(btnAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(41, 335, 105, 39));

        vmTable.setBackground(new java.awt.Color(255, 255, 204));
        vmTable.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        vmTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Venue_ID", "Venue_Name", "Venue_Place", "Venue_Cost", "Venue_ContactNo", "Venue_Image"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        vmTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                vmTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(vmTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 390, 830, 260));

        imageLabel.setForeground(new java.awt.Color(255, 255, 255));
        imageLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        imageLabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 2));
        add(imageLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 140, 170, 130));

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ems/bg15.png"))); // NOI18N
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 850, 660));
    }// </editor-fold>                        

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {                                       
        // TODO add your handling code here:
        if (checkValidation() && vID.getText().trim().isEmpty()) {
            String venueName = vName.getText();
            String venuePlace = vPlace.getText();
            double venueCost = Double.parseDouble(vCost.getText());
            String venueContact = vContNo.getText();
            VenueManagement venue = new VenueManagement(venueName,venuePlace,venueCost,venueContact,imagePath);
            boolean check = VenueManagementDao.ADD(venue);
            reSetField();
            if (check) {
                JOptionPane.showMessageDialog(VenueManagementForm.this, "Venue added successfully..");
                load();
            } else {
                JOptionPane.showMessageDialog(VenueManagementForm.this, "Venue Already Exist..");
            }
        }
    }                                      

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {                                          
        // TODO add your handling code here:
        int i = vmTable.getSelectedRow();
        if (i == -1) {
            JOptionPane.showMessageDialog(VenueManagementForm.this, "Select any Row");
        } else {
            int id = Integer.parseInt(model.getValueAt(i, 0).toString());
            VenueManagementDao.deleteRow(id);
            load();
            reSetField();
        }
    }                                         

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {                                          
        // TODO add your handling code here:
         int i = vmTable.getSelectedRow();
        if (i != 1 && checkValidation() && !(vID.getText().trim().isEmpty())) {
            int id = Integer.parseInt(vID.getText());
            String name = vName.getText();
            String place = vPlace.getText();
            double cost = Double.parseDouble(vCost.getText());
            String contact = vContNo.getText();
            String url = imagePath;
            VenueManagementDao.update(id,name,place,cost,contact,url);
            load();
            reSetField();
        } else {
            JOptionPane.showMessageDialog(VenueManagementForm.this, "Select Row to update");
        }
    }                                         

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
        reSetField();
    }                                        

    private void formMouseClicked(java.awt.event.MouseEvent evt) {                                  
        // TODO add your handling code here:
         vmTable.clearSelection();
    }                                 

    private void vmTableMouseClicked(java.awt.event.MouseEvent evt) {                                     
        // TODO add your handling code here:
        reSetField();
        int i = vmTable.getSelectedRow();
        if (i != -1) {
            vID.setText(model.getValueAt(i, 0).toString());
            vName.setText(model.getValueAt(i, 1).toString());
            vPlace.setText(model.getValueAt(i, 2).toString());
            vCost.setText(model.getValueAt(i, 3).toString());
            vContNo.setText(model.getValueAt(i, 4).toString());
            imagePath = model.getValueAt(i, 5).toString();
            loadImage(imagePath);

        } else {
            JOptionPane.showMessageDialog(VenueManagementForm.this, "Select any Row");
        }
    }                                    

    private void chooseImageActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        //fileChooser.setCurrentDirectory(new File(System.getProperty("user.home")));
        fileChooser.setCurrentDirectory(new File("."));
        int result = fileChooser.showOpenDialog(this.ems);
        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            System.out.println("Selected file: " + selectedFile.getAbsolutePath());
            imagePath = selectedFile.getAbsolutePath();
            loadImage(selectedFile.getAbsolutePath());
        }
    }                                           
    
    private void loadImage(String path) {

        if (path != null && !path.trim().equalsIgnoreCase("null") && path.trim().length() > 0) {
            try {
                BufferedImage myPicture = ImageIO.read(new File(path));
                imageLabel.setIcon(new ImageIcon(myPicture));
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }
    
    private void load() {
        List<VenueManagement> list = VenueManagementDao.getAll();
        model.setRowCount(0);
        for (int i = 0; i < list.size(); i++) {
            VenueManagement item = list.get(i);
            int id = item.getVenueID();
            String name = item.getVenueName();
            String place = item.getVenuePlace();
            double cost = item.getVenueCost();
            String contact = item.getVenueContNo();
            String url = item.getVenueImage();
            addRow(id, name,place,cost,contact,url);

        }

    }
    
    private void addRow(int id, String name,String place, double cost,String contact,String url) {
        model.insertRow(vmTable.getRowCount(), new Object[]{id, name,place, cost, contact, url});
    }
    
    private boolean checkValidation(){
        if (vName.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(VenueManagementForm.this, "Enter Venue Name");
            vName.grabFocus();
            return false;
        } else if (vPlace.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(VenueManagementForm.this, "Enter Venue Place");
            vPlace.grabFocus();
            return false;
        }else if (vCost.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(VenueManagementForm.this, "Enter Venue Cost");
            vCost.grabFocus();
            return false;
        }else if (vContNo.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(VenueManagementForm.this, "Enter Venue Contact No");
            vContNo.grabFocus();
            return false;
        }
        return true;
        
    }

    private void reSetField() {
        vID.setText(null);
        vName.setText(null);
        vPlace.setText(null);
        vCost.setText(null);
        vContNo.setText(null);
        imageLabel.setIcon(null);
        imagePath = null;
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton chooseImage;
    private javax.swing.JLabel imageLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField vContNo;
    private javax.swing.JTextField vCost;
    private javax.swing.JTextField vID;
    private javax.swing.JTextField vName;
    private javax.swing.JTextField vPlace;
    private javax.swing.JTable vmTable;
    // End of variables declaration                   
}
