/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.ems;

import java.awt.image.BufferedImage;
import java.io.File;
import java.util.List;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author dell
 */
public class EquipmentManagementForm extends javax.swing.JPanel {

    /**
     * Creates new form EquipmentManagementForm
     */
    private EMS ems;
    private String imagePath;
    DefaultTableModel model;
    
    public EquipmentManagementForm(EMS ems) {
        this.ems = ems;
        initComponents();
        model = (DefaultTableModel) eqTable.getModel();
        eqTable.removeColumn(eqTable.getColumnModel().getColumn(3));
        load();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        eqID = new javax.swing.JTextField();
        eqCost = new javax.swing.JTextField();
        eqName = new javax.swing.JTextField();
        imageLabel = new javax.swing.JLabel();
        btnChooseImage = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        eqTable = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();

        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        setForeground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(850, 709));
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });
        setLayout(null);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 3, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Equipment Management");
        add(jLabel1);
        jLabel1.setBounds(240, 30, 367, 42);

        jLabel2.setFont(new java.awt.Font("Cambria Math", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Equipment Name");
        add(jLabel2);
        jLabel2.setBounds(50, 184, 148, 22);

        jLabel3.setFont(new java.awt.Font("Cambria Math", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Equipment Cost");
        add(jLabel3);
        jLabel3.setBounds(50, 240, 137, 22);

        jLabel4.setFont(new java.awt.Font("Cambria Math", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Equipment Image");
        add(jLabel4);
        jLabel4.setBounds(580, 120, 152, 22);

        jLabel5.setFont(new java.awt.Font("Cambria Math", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Equipment ID");
        add(jLabel5);
        jLabel5.setBounds(50, 128, 119, 22);

        eqID.setBackground(new java.awt.Color(255, 255, 204));
        eqID.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        eqID.setEnabled(false);
        eqID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eqIDActionPerformed(evt);
            }
        });
        add(eqID);
        eqID.setBounds(250, 130, 160, 29);

        eqCost.setBackground(new java.awt.Color(255, 255, 204));
        eqCost.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        eqCost.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eqCostActionPerformed(evt);
            }
        });
        add(eqCost);
        eqCost.setBounds(250, 230, 160, 29);

        eqName.setBackground(new java.awt.Color(255, 255, 204));
        eqName.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        eqName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eqNameActionPerformed(evt);
            }
        });
        add(eqName);
        eqName.setBounds(250, 180, 160, 29);

        imageLabel.setBackground(new java.awt.Color(255, 255, 204));
        imageLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        imageLabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        add(imageLabel);
        imageLabel.setBounds(580, 150, 160, 130);

        btnChooseImage.setFont(new java.awt.Font("Cambria Math", 1, 18)); // NOI18N
        btnChooseImage.setText("Choose Image");
        btnChooseImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChooseImageActionPerformed(evt);
            }
        });
        add(btnChooseImage);
        btnChooseImage.setBounds(580, 290, 160, 40);

        btnClear.setFont(new java.awt.Font("Cambria Math", 1, 18)); // NOI18N
        btnClear.setText("CLEAR");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });
        add(btnClear);
        btnClear.setBounds(400, 380, 110, 40);

        btnAdd.setFont(new java.awt.Font("Cambria Math", 1, 18)); // NOI18N
        btnAdd.setText("ADD");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        add(btnAdd);
        btnAdd.setBounds(50, 380, 110, 40);

        btnUpdate.setFont(new java.awt.Font("Cambria Math", 1, 18)); // NOI18N
        btnUpdate.setText("UPDATE");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        add(btnUpdate);
        btnUpdate.setBounds(170, 380, 110, 40);

        btnDelete.setFont(new java.awt.Font("Cambria Math", 1, 18)); // NOI18N
        btnDelete.setText("DELETE");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        add(btnDelete);
        btnDelete.setBounds(290, 380, 101, 40);

        eqTable.setBackground(new java.awt.Color(255, 255, 204));
        eqTable.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        eqTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Equipment_ID", "Equipment_Name", "Equipment_Cost", "Equipment_Image"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.Double.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        eqTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                eqTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(eqTable);

        add(jScrollPane1);
        jScrollPane1.setBounds(30, 440, 790, 240);

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ems/bg15.png"))); // NOI18N
        add(jLabel6);
        jLabel6.setBounds(10, 10, 830, 690);
    }// </editor-fold>//GEN-END:initComponents

    private void eqIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eqIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_eqIDActionPerformed

    private void eqCostActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eqCostActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_eqCostActionPerformed

    private void eqNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eqNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_eqNameActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        if (checkValidation() && eqID.getText().trim().isEmpty()) {
            String name = eqName.getText();
            double cost = Double.parseDouble(eqCost.getText());
            EquipmentManagement equipment = new EquipmentManagement(name, cost, imagePath);
            boolean check = EquipmentManagementDao.ADD(equipment);
            reSetField();
            if (check) {
                JOptionPane.showMessageDialog(EquipmentManagementForm.this, "Equipment added successfully..");
                load();
            } else {
                JOptionPane.showMessageDialog(EquipmentManagementForm.this, "Equipment Already Exist..");
            }
        }   
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
         int i = eqTable.getSelectedRow();
        if (i != 1 && checkValidation() && !(eqID.getText().trim().isEmpty())) {
            int id = Integer.parseInt(eqID.getText());
            String name = eqName.getText();
            double cost = Double.parseDouble(eqCost.getText());
            String url = imagePath;
            EquipmentManagementDao.update(id, name, cost, url);
            load();
            reSetField();
        } else {
            JOptionPane.showMessageDialog(EquipmentManagementForm.this, "Select Row to update");
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        int i = eqTable.getSelectedRow();
        if (i == -1) {
            JOptionPane.showMessageDialog(EquipmentManagementForm.this, "Select any Row");
        } else {
            int id = Integer.parseInt(model.getValueAt(i, 0).toString());
            EquipmentManagementDao.deleteRow(id);
            load();
            reSetField();
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // TODO add your handling code here:
        reSetField();
    }//GEN-LAST:event_btnClearActionPerformed

    private void eqTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_eqTableMouseClicked
        // TODO add your handling code here:
        reSetField();
        int i = eqTable.getSelectedRow();
        if (i != -1) {
            eqID.setText(model.getValueAt(i, 0).toString());
            eqName.setText(model.getValueAt(i, 1).toString());
            eqCost.setText(model.getValueAt(i, 2).toString());
            imagePath = model.getValueAt(i, 3).toString();
            loadImage(imagePath);

        } else {
            JOptionPane.showMessageDialog(EquipmentManagementForm.this, "Select any Row");
        }
    }//GEN-LAST:event_eqTableMouseClicked

    private void btnChooseImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChooseImageActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setCurrentDirectory(new File("."));
        int result = fileChooser.showOpenDialog(this.ems);
        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            System.out.println("Selected file: " + selectedFile.getAbsolutePath());
            imagePath = selectedFile.getAbsolutePath();
            loadImage(selectedFile.getAbsolutePath());
        }

    }//GEN-LAST:event_btnChooseImageActionPerformed

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        // TODO add your handling code here:
        eqTable.clearSelection();
    }//GEN-LAST:event_formMouseClicked

    private void load() {
        List<EquipmentManagement> list = EquipmentManagementDao.getAll();
        model.setRowCount(0);
        for (int i = 0; i < list.size(); i++) {
            EquipmentManagement equipment = list.get(i);
            int id = equipment.getEquipmentID();
            String name = equipment.getEquipmentName();
            double cost = equipment.getEquipmentCost();
            String url = equipment.getEquipmentImage();
            addRow(id, name, cost, url);

        }

    }
    
    private void loadImage(String path) {

        if (path != null && !path.trim().equalsIgnoreCase("null") && path.trim().length() > 0) {
            try {
                BufferedImage myPicture = ImageIO.read(new File(path));
                imageLabel.setIcon(new ImageIcon(myPicture));
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }
    
    private void addRow(int id, String name, double cost, String url) {
        model.insertRow(eqTable.getRowCount(), new Object[]{id, name, cost, url});
    }
     private boolean checkValidation() {
        if (eqName.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(EquipmentManagementForm.this, "Enter Name");
            eqName.grabFocus();
            return false;
        } else if (eqCost.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(EquipmentManagementForm.this, "Enter Cost");
            eqCost.grabFocus();
            return false;
        }
        return true;
    }

    private void reSetField() {
        eqID.setText(null);
        eqName.setText(null);
        eqCost.setText(null);
        imageLabel.setIcon(null);
        imagePath = null;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnChooseImage;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JTextField eqCost;
    private javax.swing.JTextField eqID;
    private javax.swing.JTextField eqName;
    private javax.swing.JTable eqTable;
    private javax.swing.JLabel imageLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
