/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.ems;

import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author dell
 */
public class ViewBookingForm extends javax.swing.JPanel {

    /**
     * Creates new form ViewBookingForm
     */
    private EMS ems;
    DefaultTableModel model;

    public ViewBookingForm(EMS ems) {
        this.ems = ems;
        initComponents();
        model = (DefaultTableModel) bkTable.getModel();
        bkTable.removeColumn(bkTable.getColumnModel().getColumn(0));
        load();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        bkTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        btnDelete = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        setPreferredSize(new java.awt.Dimension(851, 670));
        setLayout(null);

        bkTable.setBackground(new java.awt.Color(255, 255, 204));
        bkTable.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        bkTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "User_ID", "Event_Type", "Venue", "Venue_Type", "Event_Start_Date", "Event_End_Date", "No_Of_Guest"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        bkTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                bkTableMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(bkTable);

        add(jScrollPane1);
        jScrollPane1.setBounds(30, 140, 790, 500);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 3, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Bookings");
        add(jLabel1);
        jLabel1.setBounds(270, 30, 240, 70);

        btnDelete.setFont(new java.awt.Font("Cambria Math", 1, 18)); // NOI18N
        btnDelete.setText("DELETE");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        add(btnDelete);
        btnDelete.setBounds(700, 90, 113, 42);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/ems/bg15.png"))); // NOI18N
        add(jLabel2);
        jLabel2.setBounds(10, 10, 830, 650);
    }// </editor-fold>//GEN-END:initComponents

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        int i = bkTable.getSelectedRow();
        if(i != -1){
            ViewBookingDao.deleteEventFood(model.getValueAt(i, 0).toString());
            ViewBookingDao.deleteEventEquipment(model.getValueAt(i, 0).toString());
            ViewBookingDao.deleteEvent(model.getValueAt(i, 0).toString());
            load();
        }else{
            JOptionPane.showMessageDialog(ViewBookingForm.this, "Slect row to delete");
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void bkTableMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bkTableMousePressed
        // TODO add your handling code here:
        int i = bkTable.getSelectedRow();
        if(evt.getClickCount() == 2 && i != -1){
            this.ems.addComponent(new ShowBookDetails(this.ems,(String)model.getValueAt(i, 0)));
        }
    }//GEN-LAST:event_bkTableMousePressed
    private void load() {
        if (LoginForm.getUserType().equalsIgnoreCase("MANAGER")) {
            List<Event> list = ViewBookingDao.getAll();
            model.setRowCount(0);
            for (int i = 0; i < list.size(); i++) {
                Event event = list.get(i);
                String id = event.getBookingID();
                int usId = event.getUser_ID();
                String eType = event.getEventType();
                String venue = event.getVenueName();
                String vType = event.getVenueType();
                Date st = event.getEventStartDate();
                Date et = event.getEventEndDate();
                int qty = event.getNoOfGuest();
                addRow(id, usId, eType, venue, vType, st, et, qty);
            }
        }else{
            List<Event> list = ViewBookingDao.getAll(LoginForm.getUserPersonId());
            model.setRowCount(0);
            for (int i = 0; i < list.size(); i++) {
                Event event = list.get(i);
                String id = event.getBookingID();
                int usId = event.getUser_ID();
                String eType = event.getEventType();
                String venue = event.getVenueName();
                String vType = event.getVenueType();
                Date st = event.getEventStartDate();
                Date et = event.getEventEndDate();
                int qty = event.getNoOfGuest();
                addRow(id, usId, eType, venue, vType, st, et, qty);
            }
        }

    }

    private void addRow(String id, int usId, String eType, String venue, String vType, Date st, Date et, int qty) {
        model.insertRow(bkTable.getRowCount(), new Object[]{id, usId, eType, venue, vType, st, et, qty});
    }

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable bkTable;
    private javax.swing.JButton btnDelete;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
